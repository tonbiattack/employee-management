package com.employee.managementapi.infrastructure.employee;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EmployeeProjectRecordExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public EmployeeProjectRecordExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andEmployeeProjectRecordIdIsNull() {
			addCriterion("employee_project_record_id is null");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdIsNotNull() {
			addCriterion("employee_project_record_id is not null");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdEqualTo(Integer value) {
			addCriterion("employee_project_record_id =", value, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdNotEqualTo(Integer value) {
			addCriterion("employee_project_record_id <>", value, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdGreaterThan(Integer value) {
			addCriterion("employee_project_record_id >", value, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("employee_project_record_id >=", value, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdLessThan(Integer value) {
			addCriterion("employee_project_record_id <", value, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdLessThanOrEqualTo(Integer value) {
			addCriterion("employee_project_record_id <=", value, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdIn(List<Integer> values) {
			addCriterion("employee_project_record_id in", values, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdNotIn(List<Integer> values) {
			addCriterion("employee_project_record_id not in", values, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdBetween(Integer value1, Integer value2) {
			addCriterion("employee_project_record_id between", value1, value2, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andEmployeeProjectRecordIdNotBetween(Integer value1, Integer value2) {
			addCriterion("employee_project_record_id not between", value1, value2, "employeeProjectRecordId");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateIsNull() {
			addCriterion("project_leaving_date is null");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateIsNotNull() {
			addCriterion("project_leaving_date is not null");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateEqualTo(Date value) {
			addCriterionForJDBCDate("project_leaving_date =", value, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("project_leaving_date <>", value, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateGreaterThan(Date value) {
			addCriterionForJDBCDate("project_leaving_date >", value, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("project_leaving_date >=", value, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateLessThan(Date value) {
			addCriterionForJDBCDate("project_leaving_date <", value, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("project_leaving_date <=", value, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateIn(List<Date> values) {
			addCriterionForJDBCDate("project_leaving_date in", values, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("project_leaving_date not in", values, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("project_leaving_date between", value1, value2, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andProjectLeavingDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("project_leaving_date not between", value1, value2, "projectLeavingDate");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointIsNull() {
			addCriterion("evaluation_point is null");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointIsNotNull() {
			addCriterion("evaluation_point is not null");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointEqualTo(String value) {
			addCriterion("evaluation_point =", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointNotEqualTo(String value) {
			addCriterion("evaluation_point <>", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointGreaterThan(String value) {
			addCriterion("evaluation_point >", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointGreaterThanOrEqualTo(String value) {
			addCriterion("evaluation_point >=", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointLessThan(String value) {
			addCriterion("evaluation_point <", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointLessThanOrEqualTo(String value) {
			addCriterion("evaluation_point <=", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointLike(String value) {
			addCriterion("evaluation_point like", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointNotLike(String value) {
			addCriterion("evaluation_point not like", value, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointIn(List<String> values) {
			addCriterion("evaluation_point in", values, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointNotIn(List<String> values) {
			addCriterion("evaluation_point not in", values, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointBetween(String value1, String value2) {
			addCriterion("evaluation_point between", value1, value2, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andEvaluationPointNotBetween(String value1, String value2) {
			addCriterion("evaluation_point not between", value1, value2, "evaluationPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointIsNull() {
			addCriterion("reflection_point is null");
			return (Criteria) this;
		}

		public Criteria andReflectionPointIsNotNull() {
			addCriterion("reflection_point is not null");
			return (Criteria) this;
		}

		public Criteria andReflectionPointEqualTo(String value) {
			addCriterion("reflection_point =", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointNotEqualTo(String value) {
			addCriterion("reflection_point <>", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointGreaterThan(String value) {
			addCriterion("reflection_point >", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointGreaterThanOrEqualTo(String value) {
			addCriterion("reflection_point >=", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointLessThan(String value) {
			addCriterion("reflection_point <", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointLessThanOrEqualTo(String value) {
			addCriterion("reflection_point <=", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointLike(String value) {
			addCriterion("reflection_point like", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointNotLike(String value) {
			addCriterion("reflection_point not like", value, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointIn(List<String> values) {
			addCriterion("reflection_point in", values, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointNotIn(List<String> values) {
			addCriterion("reflection_point not in", values, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointBetween(String value1, String value2) {
			addCriterion("reflection_point between", value1, value2, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andReflectionPointNotBetween(String value1, String value2) {
			addCriterion("reflection_point not between", value1, value2, "reflectionPoint");
			return (Criteria) this;
		}

		public Criteria andProjectIdIsNull() {
			addCriterion("project_id is null");
			return (Criteria) this;
		}

		public Criteria andProjectIdIsNotNull() {
			addCriterion("project_id is not null");
			return (Criteria) this;
		}

		public Criteria andProjectIdEqualTo(Integer value) {
			addCriterion("project_id =", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdNotEqualTo(Integer value) {
			addCriterion("project_id <>", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdGreaterThan(Integer value) {
			addCriterion("project_id >", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("project_id >=", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdLessThan(Integer value) {
			addCriterion("project_id <", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdLessThanOrEqualTo(Integer value) {
			addCriterion("project_id <=", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdIn(List<Integer> values) {
			addCriterion("project_id in", values, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdNotIn(List<Integer> values) {
			addCriterion("project_id not in", values, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdBetween(Integer value1, Integer value2) {
			addCriterion("project_id between", value1, value2, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdNotBetween(Integer value1, Integer value2) {
			addCriterion("project_id not between", value1, value2, "projectId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdIsNull() {
			addCriterion("employee_id is null");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdIsNotNull() {
			addCriterion("employee_id is not null");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdEqualTo(Integer value) {
			addCriterion("employee_id =", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdNotEqualTo(Integer value) {
			addCriterion("employee_id <>", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdGreaterThan(Integer value) {
			addCriterion("employee_id >", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("employee_id >=", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdLessThan(Integer value) {
			addCriterion("employee_id <", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdLessThanOrEqualTo(Integer value) {
			addCriterion("employee_id <=", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdIn(List<Integer> values) {
			addCriterion("employee_id in", values, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdNotIn(List<Integer> values) {
			addCriterion("employee_id not in", values, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdBetween(Integer value1, Integer value2) {
			addCriterion("employee_id between", value1, value2, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdNotBetween(Integer value1, Integer value2) {
			addCriterion("employee_id not between", value1, value2, "employeeId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.employee_project_record
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employee.employee_project_record
     *
     * @mbg.generated do_not_delete_during_merge Fri Dec 23 17:01:09 JST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}