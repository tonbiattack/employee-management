package com.employee.managementapi.infrastructure.employee;

import java.util.ArrayList;
import java.util.List;

public class DivisionExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public DivisionExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andDivisionIdIsNull() {
			addCriterion("division_id is null");
			return (Criteria) this;
		}

		public Criteria andDivisionIdIsNotNull() {
			addCriterion("division_id is not null");
			return (Criteria) this;
		}

		public Criteria andDivisionIdEqualTo(Integer value) {
			addCriterion("division_id =", value, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdNotEqualTo(Integer value) {
			addCriterion("division_id <>", value, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdGreaterThan(Integer value) {
			addCriterion("division_id >", value, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("division_id >=", value, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdLessThan(Integer value) {
			addCriterion("division_id <", value, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdLessThanOrEqualTo(Integer value) {
			addCriterion("division_id <=", value, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdIn(List<Integer> values) {
			addCriterion("division_id in", values, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdNotIn(List<Integer> values) {
			addCriterion("division_id not in", values, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdBetween(Integer value1, Integer value2) {
			addCriterion("division_id between", value1, value2, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDivisionIdNotBetween(Integer value1, Integer value2) {
			addCriterion("division_id not between", value1, value2, "divisionId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdIsNull() {
			addCriterion("department_id is null");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdIsNotNull() {
			addCriterion("department_id is not null");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdEqualTo(Integer value) {
			addCriterion("department_id =", value, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdNotEqualTo(Integer value) {
			addCriterion("department_id <>", value, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdGreaterThan(Integer value) {
			addCriterion("department_id >", value, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("department_id >=", value, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdLessThan(Integer value) {
			addCriterion("department_id <", value, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdLessThanOrEqualTo(Integer value) {
			addCriterion("department_id <=", value, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdIn(List<Integer> values) {
			addCriterion("department_id in", values, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdNotIn(List<Integer> values) {
			addCriterion("department_id not in", values, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdBetween(Integer value1, Integer value2) {
			addCriterion("department_id between", value1, value2, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDepartmentIdNotBetween(Integer value1, Integer value2) {
			addCriterion("department_id not between", value1, value2, "departmentId");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeIsNull() {
			addCriterion("division_code is null");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeIsNotNull() {
			addCriterion("division_code is not null");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeEqualTo(String value) {
			addCriterion("division_code =", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeNotEqualTo(String value) {
			addCriterion("division_code <>", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeGreaterThan(String value) {
			addCriterion("division_code >", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeGreaterThanOrEqualTo(String value) {
			addCriterion("division_code >=", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeLessThan(String value) {
			addCriterion("division_code <", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeLessThanOrEqualTo(String value) {
			addCriterion("division_code <=", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeLike(String value) {
			addCriterion("division_code like", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeNotLike(String value) {
			addCriterion("division_code not like", value, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeIn(List<String> values) {
			addCriterion("division_code in", values, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeNotIn(List<String> values) {
			addCriterion("division_code not in", values, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeBetween(String value1, String value2) {
			addCriterion("division_code between", value1, value2, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionCodeNotBetween(String value1, String value2) {
			addCriterion("division_code not between", value1, value2, "divisionCode");
			return (Criteria) this;
		}

		public Criteria andDivisionNameIsNull() {
			addCriterion("division_name is null");
			return (Criteria) this;
		}

		public Criteria andDivisionNameIsNotNull() {
			addCriterion("division_name is not null");
			return (Criteria) this;
		}

		public Criteria andDivisionNameEqualTo(String value) {
			addCriterion("division_name =", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameNotEqualTo(String value) {
			addCriterion("division_name <>", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameGreaterThan(String value) {
			addCriterion("division_name >", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameGreaterThanOrEqualTo(String value) {
			addCriterion("division_name >=", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameLessThan(String value) {
			addCriterion("division_name <", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameLessThanOrEqualTo(String value) {
			addCriterion("division_name <=", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameLike(String value) {
			addCriterion("division_name like", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameNotLike(String value) {
			addCriterion("division_name not like", value, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameIn(List<String> values) {
			addCriterion("division_name in", values, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameNotIn(List<String> values) {
			addCriterion("division_name not in", values, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameBetween(String value1, String value2) {
			addCriterion("division_name between", value1, value2, "divisionName");
			return (Criteria) this;
		}

		public Criteria andDivisionNameNotBetween(String value1, String value2) {
			addCriterion("division_name not between", value1, value2, "divisionName");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdIsNull() {
			addCriterion("business_partner_id is null");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdIsNotNull() {
			addCriterion("business_partner_id is not null");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdEqualTo(Integer value) {
			addCriterion("business_partner_id =", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdNotEqualTo(Integer value) {
			addCriterion("business_partner_id <>", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdGreaterThan(Integer value) {
			addCriterion("business_partner_id >", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("business_partner_id >=", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdLessThan(Integer value) {
			addCriterion("business_partner_id <", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdLessThanOrEqualTo(Integer value) {
			addCriterion("business_partner_id <=", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdIn(List<Integer> values) {
			addCriterion("business_partner_id in", values, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdNotIn(List<Integer> values) {
			addCriterion("business_partner_id not in", values, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdBetween(Integer value1, Integer value2) {
			addCriterion("business_partner_id between", value1, value2, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("business_partner_id not between", value1, value2, "businessPartnerId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.division
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employee.division
     *
     * @mbg.generated do_not_delete_during_merge Fri Dec 23 17:01:09 JST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}