package com.employee.managementapi.infrastructure.employee;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RetirementExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public RetirementExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andRetirementIdIsNull() {
			addCriterion("retirement_id is null");
			return (Criteria) this;
		}

		public Criteria andRetirementIdIsNotNull() {
			addCriterion("retirement_id is not null");
			return (Criteria) this;
		}

		public Criteria andRetirementIdEqualTo(Integer value) {
			addCriterion("retirement_id =", value, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdNotEqualTo(Integer value) {
			addCriterion("retirement_id <>", value, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdGreaterThan(Integer value) {
			addCriterion("retirement_id >", value, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("retirement_id >=", value, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdLessThan(Integer value) {
			addCriterion("retirement_id <", value, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdLessThanOrEqualTo(Integer value) {
			addCriterion("retirement_id <=", value, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdIn(List<Integer> values) {
			addCriterion("retirement_id in", values, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdNotIn(List<Integer> values) {
			addCriterion("retirement_id not in", values, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdBetween(Integer value1, Integer value2) {
			addCriterion("retirement_id between", value1, value2, "retirementId");
			return (Criteria) this;
		}

		public Criteria andRetirementIdNotBetween(Integer value1, Integer value2) {
			addCriterion("retirement_id not between", value1, value2, "retirementId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdIsNull() {
			addCriterion("employee_id is null");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdIsNotNull() {
			addCriterion("employee_id is not null");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdEqualTo(Integer value) {
			addCriterion("employee_id =", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdNotEqualTo(Integer value) {
			addCriterion("employee_id <>", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdGreaterThan(Integer value) {
			addCriterion("employee_id >", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("employee_id >=", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdLessThan(Integer value) {
			addCriterion("employee_id <", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdLessThanOrEqualTo(Integer value) {
			addCriterion("employee_id <=", value, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdIn(List<Integer> values) {
			addCriterion("employee_id in", values, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdNotIn(List<Integer> values) {
			addCriterion("employee_id not in", values, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdBetween(Integer value1, Integer value2) {
			addCriterion("employee_id between", value1, value2, "employeeId");
			return (Criteria) this;
		}

		public Criteria andEmployeeIdNotBetween(Integer value1, Integer value2) {
			addCriterion("employee_id not between", value1, value2, "employeeId");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonIsNull() {
			addCriterion("retirement_reason is null");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonIsNotNull() {
			addCriterion("retirement_reason is not null");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonEqualTo(String value) {
			addCriterion("retirement_reason =", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonNotEqualTo(String value) {
			addCriterion("retirement_reason <>", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonGreaterThan(String value) {
			addCriterion("retirement_reason >", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonGreaterThanOrEqualTo(String value) {
			addCriterion("retirement_reason >=", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonLessThan(String value) {
			addCriterion("retirement_reason <", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonLessThanOrEqualTo(String value) {
			addCriterion("retirement_reason <=", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonLike(String value) {
			addCriterion("retirement_reason like", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonNotLike(String value) {
			addCriterion("retirement_reason not like", value, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonIn(List<String> values) {
			addCriterion("retirement_reason in", values, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonNotIn(List<String> values) {
			addCriterion("retirement_reason not in", values, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonBetween(String value1, String value2) {
			addCriterion("retirement_reason between", value1, value2, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementReasonNotBetween(String value1, String value2) {
			addCriterion("retirement_reason not between", value1, value2, "retirementReason");
			return (Criteria) this;
		}

		public Criteria andRetirementDateIsNull() {
			addCriterion("retirement_date is null");
			return (Criteria) this;
		}

		public Criteria andRetirementDateIsNotNull() {
			addCriterion("retirement_date is not null");
			return (Criteria) this;
		}

		public Criteria andRetirementDateEqualTo(Date value) {
			addCriterionForJDBCDate("retirement_date =", value, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("retirement_date <>", value, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateGreaterThan(Date value) {
			addCriterionForJDBCDate("retirement_date >", value, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("retirement_date >=", value, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateLessThan(Date value) {
			addCriterionForJDBCDate("retirement_date <", value, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("retirement_date <=", value, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateIn(List<Date> values) {
			addCriterionForJDBCDate("retirement_date in", values, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("retirement_date not in", values, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("retirement_date between", value1, value2, "retirementDate");
			return (Criteria) this;
		}

		public Criteria andRetirementDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("retirement_date not between", value1, value2, "retirementDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.retirement
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employee.retirement
     *
     * @mbg.generated do_not_delete_during_merge Fri Dec 23 17:01:09 JST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}