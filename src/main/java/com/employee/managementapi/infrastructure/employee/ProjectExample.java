package com.employee.managementapi.infrastructure.employee;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ProjectExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public ProjectExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andProjectIdIsNull() {
			addCriterion("project_id is null");
			return (Criteria) this;
		}

		public Criteria andProjectIdIsNotNull() {
			addCriterion("project_id is not null");
			return (Criteria) this;
		}

		public Criteria andProjectIdEqualTo(Integer value) {
			addCriterion("project_id =", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdNotEqualTo(Integer value) {
			addCriterion("project_id <>", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdGreaterThan(Integer value) {
			addCriterion("project_id >", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("project_id >=", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdLessThan(Integer value) {
			addCriterion("project_id <", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdLessThanOrEqualTo(Integer value) {
			addCriterion("project_id <=", value, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdIn(List<Integer> values) {
			addCriterion("project_id in", values, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdNotIn(List<Integer> values) {
			addCriterion("project_id not in", values, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdBetween(Integer value1, Integer value2) {
			addCriterion("project_id between", value1, value2, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectIdNotBetween(Integer value1, Integer value2) {
			addCriterion("project_id not between", value1, value2, "projectId");
			return (Criteria) this;
		}

		public Criteria andProjectCodeIsNull() {
			addCriterion("project_code is null");
			return (Criteria) this;
		}

		public Criteria andProjectCodeIsNotNull() {
			addCriterion("project_code is not null");
			return (Criteria) this;
		}

		public Criteria andProjectCodeEqualTo(String value) {
			addCriterion("project_code =", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeNotEqualTo(String value) {
			addCriterion("project_code <>", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeGreaterThan(String value) {
			addCriterion("project_code >", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeGreaterThanOrEqualTo(String value) {
			addCriterion("project_code >=", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeLessThan(String value) {
			addCriterion("project_code <", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeLessThanOrEqualTo(String value) {
			addCriterion("project_code <=", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeLike(String value) {
			addCriterion("project_code like", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeNotLike(String value) {
			addCriterion("project_code not like", value, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeIn(List<String> values) {
			addCriterion("project_code in", values, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeNotIn(List<String> values) {
			addCriterion("project_code not in", values, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeBetween(String value1, String value2) {
			addCriterion("project_code between", value1, value2, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectCodeNotBetween(String value1, String value2) {
			addCriterion("project_code not between", value1, value2, "projectCode");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateIsNull() {
			addCriterion("project_start_date is null");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateIsNotNull() {
			addCriterion("project_start_date is not null");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateEqualTo(Date value) {
			addCriterionForJDBCDate("project_start_date =", value, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("project_start_date <>", value, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateGreaterThan(Date value) {
			addCriterionForJDBCDate("project_start_date >", value, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("project_start_date >=", value, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateLessThan(Date value) {
			addCriterionForJDBCDate("project_start_date <", value, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("project_start_date <=", value, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateIn(List<Date> values) {
			addCriterionForJDBCDate("project_start_date in", values, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("project_start_date not in", values, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("project_start_date between", value1, value2, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectStartDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("project_start_date not between", value1, value2, "projectStartDate");
			return (Criteria) this;
		}

		public Criteria andProjectContentIsNull() {
			addCriterion("project_content is null");
			return (Criteria) this;
		}

		public Criteria andProjectContentIsNotNull() {
			addCriterion("project_content is not null");
			return (Criteria) this;
		}

		public Criteria andProjectContentEqualTo(String value) {
			addCriterion("project_content =", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentNotEqualTo(String value) {
			addCriterion("project_content <>", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentGreaterThan(String value) {
			addCriterion("project_content >", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentGreaterThanOrEqualTo(String value) {
			addCriterion("project_content >=", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentLessThan(String value) {
			addCriterion("project_content <", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentLessThanOrEqualTo(String value) {
			addCriterion("project_content <=", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentLike(String value) {
			addCriterion("project_content like", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentNotLike(String value) {
			addCriterion("project_content not like", value, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentIn(List<String> values) {
			addCriterion("project_content in", values, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentNotIn(List<String> values) {
			addCriterion("project_content not in", values, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentBetween(String value1, String value2) {
			addCriterion("project_content between", value1, value2, "projectContent");
			return (Criteria) this;
		}

		public Criteria andProjectContentNotBetween(String value1, String value2) {
			addCriterion("project_content not between", value1, value2, "projectContent");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdIsNull() {
			addCriterion("business_partner_id is null");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdIsNotNull() {
			addCriterion("business_partner_id is not null");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdEqualTo(Integer value) {
			addCriterion("business_partner_id =", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdNotEqualTo(Integer value) {
			addCriterion("business_partner_id <>", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdGreaterThan(Integer value) {
			addCriterion("business_partner_id >", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("business_partner_id >=", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdLessThan(Integer value) {
			addCriterion("business_partner_id <", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdLessThanOrEqualTo(Integer value) {
			addCriterion("business_partner_id <=", value, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdIn(List<Integer> values) {
			addCriterion("business_partner_id in", values, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdNotIn(List<Integer> values) {
			addCriterion("business_partner_id not in", values, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdBetween(Integer value1, Integer value2) {
			addCriterion("business_partner_id between", value1, value2, "businessPartnerId");
			return (Criteria) this;
		}

		public Criteria andBusinessPartnerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("business_partner_id not between", value1, value2, "businessPartnerId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table employee.project
	 * @mbg.generated  Mon Dec 26 23:16:33 JST 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employee.project
     *
     * @mbg.generated do_not_delete_during_merge Fri Dec 23 17:01:09 JST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}